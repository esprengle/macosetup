#!/usr/bin/env bash
# shellcheck disable=SC1090
# shellcheck disable=SC2034
# shellcheck disable=SC2154

# msx defaults
: "${security_privacy_enabled:=false}"
: "${lock_message:=macOSetup}"
: "${filevault_enabled:=true}"
: "${firewall_state:=off}"
: "${firewall_blockall:=off}"
: "${firewall_signed:=off}"
: "${firewall_signedapp:=off}"
: "${firewall_stealthmode:=off}"

# msx settings
msx_module_enabled="$security_privacy_enabled"
msx_module_appcheck=()

# msx main
msx_module_main()
{
  # General
  # Require password immediately after sleep or screen saver begins (MOJAVE-10.14 NOT WORKING!!!!)
  ##defaults write com.apple.screensaver askForPassword -bool true
  ##defaults write com.apple.screensaver askForPasswordDelay -int 0

  # Lock Message
  if [[ -n "$lock_message" ]]
  then
    sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText -string "$lock_message"
  else
    sudo defaults delete /Library/Preferences/com.apple.loginwindow LoginwindowText 2>/dev/null
  fi

  # FileVault
  filevault_status="$(sudo fdesetup isactive)"
  if [[ "$filevault_enabled" == true ]]
  then
    # Enable
    if [[ "$filevault_status" = "false" ]]
    then
      sudo fdesetup enable -user "$(whoami)"
      echo 'Run "fdesetup status" in another terminal to see the progress.'
      read -p 'Press RETURN to continue.' -r
    fi
  else
    # Disable
    if [[ "$filevault_status" = "true" ]]
    then
      sudo fdesetup disable -user "$(whoami)"
      echo 'Run "fdesetup status" in another terminal to see the progress.'
      read -p 'Press RETURN to continue.' -r
    fi
  fi

  # Firewall
  #sudo launchctl load /System/Library/LaunchDaemons/com.apple.alf.agent.plist
  #sudo launchctl load /System/Library/LaunchAgents/com.apple.alf.useragent.plist
  #/usr/libexec/ApplicationFirewall/socketfilterfw --help

  # Turn On/Off Firewall
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate "$firewall_state"

  # Firewall Options
  if [[ "$firewall_state" == "on" ]]
  then
    # Block all incoming connections
    sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setblockall "$firewall_blockall"

    # Automatically allow built-in software to receive incoming connections
    sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned "$firewall_signed"

    # Automatically allow downloaded signed software to recive incoming connections
    sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsignedapp "$firewall_signedapp"

    # Enable stealth mode
    sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode "$firewall_stealthmode"
  fi

  # Privacy
  #TODO

  # Databases:
  #  /Library/Application\ Support/com.apple.TCC/TCC.db
  #  ~/Library/Application\ Support/com.apple.TCC/TCC.db
  #
  # Location Services:  kTCCServiceLocation
  # Contacts:           kTCCServiceSystemPolicyAllFiles
  # Calendars:          kTCCServiceCalendar
  # Reminders:          kTCCServiceReminders
  # Photos:             TODO
  # Camera:             TODO
  # Microphone:         TODO
  # Accessibility:      kTCCServiceAccessibility
  # Full Disk Access:   kTCCServiceSystemPolicyAllFiles
  # Automation:         TODO
  # Advertising:        TODO
}
:
